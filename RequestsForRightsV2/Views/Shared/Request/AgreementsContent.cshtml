@using RequestsForRights.Domain.Entities
@{
    dynamic securityService = ViewData["SecurityService"];
    if (securityService == null)
    {
        return;
    }
    var successAgreements = ((IEnumerable<RequestAgreement>)Model.SuccessAgreements)
        .GroupBy(r => r.User.Department).ToList();
    var cancelAgreements = ((IEnumerable<RequestAgreement>)Model.CancelAgreements)
        .GroupBy(r => r.User.Department).ToList();
    var excludedAgreemens = ((IEnumerable<RequestAgreement>)Model.ExcludedAgreements)
        .GroupBy(r => r.User.Department).ToList();
    var waitAgreementUsers = ((IEnumerable<AclUser>)Model.WaitAgreementUsers).
        GroupBy(r => r.Department).ToList();
    var idRequest = Model.RequestModel.IdRequest;
    var requestStateName = Model.RequestModel.RequestStateName;
}

<div class="col-md-8 col-md-offset-2 ">
    <div class="text-center text-info rr-agreements-request-state">Текущий статус заявки «@(requestStateName)»</div>
</div>
<div class="clearfix"></div>
@if (!successAgreements.Any() && !cancelAgreements.Any() && !waitAgreementUsers.Any() & !excludedAgreemens.Any())
{
    <div class="text-center text-info rr-agreements-empty">Согласование не требуется</div>
}

@if (waitAgreementUsers.Any())
{
    <div class=" col-md-8 col-md-offset-2">
        <div class="panel panel-primary">
            <div class="panel-heading">Ожидается согласование</div>
                @foreach (var agreementDepartment in waitAgreementUsers)
                {
                    <div class="list-group">
                        <div class="list-group-item rr-agreement-item">
                            <h4 class="list-group-item-heading">@agreementDepartment.Key.Name</h4>
                            @foreach (var user in agreementDepartment.Select(r => r))
                            {
                                <dl class="dl-horizontal">
                                    <dt>ФИО сотрудника</dt>
                                    <dd>@user.Snp</dd>
                                    @if (!string.IsNullOrEmpty(user.Email))
                                    {
                                        <dt>Почтовый адрес</dt>
                                        <dd><a href="mailto:@(user.Email)">@user.Email</a></dd>
                                    }
                                    @{
                                        var userAgreement = user.RequestAgreements.FirstOrDefault(r => r.IdRequest == idRequest &&
                                                                                                       r.IdAgreementState == 1);
                                        var sendDate = Model.RequestModel.Date;
                                        if (userAgreement != null)
                                        {
                                            sendDate = userAgreement.SendDate;
                                        }
                                    }
                                    @if (sendDate != null)
                                    {
                                        <dt>Отправлено на согласование</dt>
                                        <dd>@sendDate.ToString("dd.MM.yyyy HH:mm")</dd>
                                    }
                                    @if (userAgreement != null &&
                                         !string.IsNullOrEmpty(userAgreement.SendDescription) &&
                                         securityService.CanViewAgreementSendDescription(userAgreement))
                                    {
                                        <dt>Комментарий диспетчера</dt>
                                        <dd>@userAgreement.SendDescription</dd>
                                    }
                                    <dt>Телефон</dt>
                                    <dd>@user.Phone</dd>
                                    <dt>Тип согласования</dt>
                                    @{
                                        var idAgreementType = user.RequestAgreements.Any(r => r.IdRequest == idRequest && r.IdAgreementType == 2) ? 2 : 1;
                                    }
                                    <dd>
                                        @(idAgreementType == 2 ? "Дополнительное" : "Первичное")
                                    </dd>
                                </dl>
                                if (securityService.CanExcludeAgreementor(Model.RequestModel))
                                {
                                    using (Ajax.BeginForm("ExcludeAgreementor", "Request",
                                        new AjaxOptions
                                        {
                                            UpdateTargetId = "rr-agreements",
                                            InsertionMode = InsertionMode.Replace,
                                            OnFailure = "sendAgreementFailure",
                                            OnSuccess = "sendAgreementSuccess"
                                        }))
                                    {
                                        <input type="hidden" name="IdRequest" id="IdRequest" value="@idRequest" />
                                        <input type="hidden" name="IdRequestAgreementType" id="IdRequestAgreementType" value="@idAgreementType" />
                                        <input type="hidden" name="IdUser" id="IdUser" value="@user.IdUser" />
                                        <button type="submit" class="close rr-agreement-exclude-button"
                                                aria-label="Исключить из согласования"
                                                title="Исключить из согласования">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                    }
                                }
                            }
                        </div>
                    </div>
                }
        </div>
    </div>
}

@if (successAgreements.Any())
{
    <div class=" col-md-8 col-md-offset-2">
        <div class="panel panel-success">
            <div class="panel-heading">Согласовано</div>
                @foreach (var agreementDepartment in successAgreements)
                {
                    <div class="list-group">
                        <div class="list-group-item">
                            <h4 class="list-group-item-heading">@agreementDepartment.Key.Name</h4>
                            @foreach (var agreement in agreementDepartment.Select(r => r))
                            {
                                <dl class="dl-horizontal">
                                    <dt>ФИО сотрудника</dt>
                                    <dd>@agreement.User.Snp</dd>
                                    @if (!string.IsNullOrEmpty(agreement.User.Email))
                                    {
                                        <dt>Почтовый адрес</dt>
                                        <dd><a href="mailto:@(agreement.User.Email)">@agreement.User.Email</a></dd>
                                    }
                                    <dt>Телефон</dt>
                                    <dd>@agreement.User.Phone</dd>
                                    @if (agreement.SendDate != null)
                                    {
                                        <dt>Отправлено на согласование</dt>
                                        <dd>@agreement.SendDate.Value.ToString("dd.MM.yyyy HH:mm")</dd>
                                    }
                                    else
                                    if (Model.RequestModel.Date != null)
                                    {

                                        <dt>Отправлено на согласование</dt>
                                        <dd>@Model.RequestModel.Date.ToString("dd.MM.yyyy HH:mm")</dd>
                                    }
                                    @if (!string.IsNullOrEmpty(agreement.SendDescription) &&
                                        securityService.CanViewAgreementSendDescription(agreement))
                                    {
                                        <dt>Комментарий диспетчера</dt>
                                        <dd>@agreement.SendDescription</dd>
                                    }
                                    <dt>Дата согласования</dt>
                                    <dd>@(agreement.AgreementDate != null ? agreement.AgreementDate.Value.ToString("dd.MM.yyyy HH:mm") : "")</dd>
                                    <dt>Тип согласования</dt>
                                    <dd>@agreement.AgreementType.Name</dd>
                                </dl>
                                }
                        </div>
                    </div>
                }
        </div>
    </div>
}

@if (cancelAgreements.Any())
{
    <div class=" col-md-8 col-md-offset-2">
        <div class="panel panel-danger">
            <div class="panel-heading">Отклонено</div>
            @foreach (var agreementDepartment in cancelAgreements)
            {
                <div class="list-group">
                    <div class="list-group-item">
                        <h4 class="list-group-item-heading">@agreementDepartment.Key.Name</h4>
                        @foreach (var agreement in agreementDepartment.Select(r => r))
                        {
                            <dl class="dl-horizontal">
                                <dt>ФИО сотрудника</dt>
                                <dd>@agreement.User.Snp</dd>
                                @if (!string.IsNullOrEmpty(agreement.User.Email))
                                {
                                    <dt>Почтовый адрес</dt>
                                    <dd><a href="mailto:@(agreement.User.Email)">@agreement.User.Email</a></dd>
                                }
                                <dt>Телефон</dt>
                                <dd>@agreement.User.Phone</dd>
                                @if (agreement.SendDate != null)
                                {
                                    <dt>Отправлено на согласование</dt>
                                    <dd>@agreement.SendDate.Value.ToString("dd.MM.yyyy HH:mm")</dd>
                                }
                                else
                                if (Model.RequestModel.Date != null)
                                {

                                    <dt>Отправлено на согласование</dt>
                                    <dd>@Model.RequestModel.Date.ToString("dd.MM.yyyy HH:mm")</dd>
                                }
                                @if (!string.IsNullOrEmpty(agreement.SendDescription) &&
                                        securityService.CanViewAgreementSendDescription(agreement))
                                {
                                    <dt>Комментарий диспетчера</dt>
                                    <dd>@agreement.SendDescription</dd>
                                }
                                <dt>Дата отклонения</dt>
                                <dd>@(agreement.AgreementDate != null ? agreement.AgreementDate.Value.ToString("dd.MM.yyyy HH:mm") : "")</dd>
                                <dt>Причина отклонения</dt>
                                <dd>@agreement.AgreementDescription</dd>
                                <dt>Тип согласования</dt>
                                <dd>@agreement.AgreementType.Name</dd>
                            </dl>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
}

@if (excludedAgreemens.Any())
{
    <div class=" col-md-8 col-md-offset-2">
        <div class="panel panel-danger">
            <div class="panel-heading">Исключены из согласования</div>
            @foreach (var agreementDepartment in excludedAgreemens)
            {
                <div class="list-group">
                    <div class="list-group-item">
                        <h4 class="list-group-item-heading">@agreementDepartment.Key.Name</h4>
                        @foreach (var agreement in agreementDepartment.Select(r => r))
                        {
                            <dl class="dl-horizontal">
                                <dt>ФИО сотрудника</dt>
                                <dd>@agreement.User.Snp</dd>
                                @if (!string.IsNullOrEmpty(agreement.User.Email))
                                {
                                    <dt>Почтовый адрес</dt>
                                    <dd><a href="mailto:@(agreement.User.Email)">@agreement.User.Email</a></dd>
                                }
                                <dt>Телефон</dt>
                                <dd>@agreement.User.Phone</dd>
                                @if (agreement.SendDate != null)
                                {
                                    <dt>Отправлено на согласование</dt>
                                    <dd>@agreement.SendDate.Value.ToString("dd.MM.yyyy HH:mm")</dd>
                                }
                                else
                                    if (Model.RequestModel.Date != null)
                                    {

                                        <dt>Отправлено на согласование</dt>
                                        <dd>@Model.RequestModel.Date.ToString("dd.MM.yyyy HH:mm")</dd>
                                    }
                                @if (!string.IsNullOrEmpty(agreement.SendDescription) &&
                                        securityService.CanViewAgreementSendDescription(agreement))
                                {
                                    <dt>Комментарий диспетчера</dt>
                                    <dd>@agreement.SendDescription</dd>
                                }
                                <dt>Тип согласования</dt>
                                <dd>@agreement.AgreementType.Name</dd>
                            </dl>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
}

@Html.Partial("Request/AgreementsControls")

