@using RequestsForRights.Web.Infrastructure.Extensions
@using RequestsForRights.Web.Infrastructure.Security.Interfaces
@using RequestsForRights.Web.Models.Models
@model RequestsForRights.Web.Models.ViewModels.Request.RequestAddUserViewModel

@{
    var securityService = (IRequestSecurityService<RequestUserModel>) ViewData["SecurityService"];
    var userIndex = -1;
    if (ViewData.Keys.Contains("UserIndex"))
    {
        int.TryParse(ViewData["UserIndex"].ToString(), out userIndex);
    }
    var id = string.Format("collapse{0}", userIndex);
    var title = string.IsNullOrEmpty(Model.RequestModel.Users[userIndex].Snp) ? "Новый сотрудник" : "Сотрудник «" + 
        Model.RequestModel.Users[userIndex].Snp + "»";
}

<div class="panel panel-primary rr-request-user-wrapper">
    <div class="panel-heading" role="tab" id="heading@id">
        <h4 class="panel-title">
            <span class="glyphicon glyphicon-user" aria-hidden="true"></span>
            <a role="button" data-toggle="collapse" data-parent="#accordion" href="#@id" aria-expanded="true" aria-controls="@id">
                @title
            </a>
            <span class="badge rr-badge">0</span>
        </h4>
    </div>
    <div id="@id" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
        <div class="panel-body">
            <div class="rr-request-user">
                <div class="form-group rr-request-user-snp rr-no-autocomplete">
                    @Html.RequiredLabelFor(r => r.RequestModel.Users[userIndex].Snp,
                    new {@class = "col-sm-2 control-label"})
                    <div class="col-sm-10">
                        @Html.TextBoxFor(r => r.RequestModel.Users[userIndex].Snp,
                        new
                        {
                            @class = "form-control",
                            placeholder = "Введите ФИО сотрудника"
                        })
                        @Html.ValidationMessageFor(r => r.RequestModel.Users[userIndex].Snp)
                    </div>
                </div>
                @if (securityService.CanSeeLogin())
                {
                    <div class="form-group rr-request-user-login">
                        @Html.RequiredLabelFor(r => r.RequestModel.Users[userIndex].Login,
                        new {@class = "col-sm-2 control-label"})
                        <div class="col-sm-10">
                            @Html.TextBoxFor(r => r.RequestModel.Users[userIndex].Login,
                            new
                            {
                                @class = "form-control",
                                @readonly = "readonly"
                            })
                            @Html.ValidationMessageFor(r => r.RequestModel.Users[userIndex].Login)
                        </div>
                    </div>
                }
                else
                {
                    <div class="rr-request-user-login">
                        @Html.HiddenFor(r => r.RequestModel.Users[userIndex].Login)
                    </div>
                }
                <div class="form-group rr-request-user-post">
                    @Html.RequiredLabelFor(r => r.RequestModel.Users[userIndex].Post,
                    new {@class = "col-sm-2 control-label"})
                    <div class="col-sm-10">
                        @Html.TextBoxFor(r => r.RequestModel.Users[userIndex].Post,
                        new
                        {
                            @class = "form-control",
                            placeholder = "Введите должность сотрудника"
                        })
                        @Html.ValidationMessageFor(r => r.RequestModel.Users[userIndex].Post)
                    </div>
                </div>
                <div class="form-group rr-request-user-department">
                    @Html.RequiredLabelFor(r => r.RequestModel.Users[userIndex].Department,
                    new {@class = "col-sm-2 control-label"})
                    <div class="col-sm-10">
                        <select class="form-control"
                                name="@Html.NameFor(r => r.RequestModel.Users[userIndex].Department)"
                                id="@Html.IdFor(r => r.RequestModel.Users[userIndex].Department)"
                                data-val="true"
                                data-val-required="Департамент является обязательным для заполнения"
                                aria-required="true">
                            <option value="" selected>Выберите департамент</option>
                            @foreach (var department in Model.Departments)
                        {
                            var selected = department.Name == Model.RequestModel.Users[userIndex].Department;
                        <option @(selected ? "selected" : "") data-id-department="@department.IdDepartment">
                            @department.Name
                        </option>
                        }
                        </select>
                        @Html.ValidationMessageFor(r => r.RequestModel.Users[userIndex].Department)
                    </div>
                </div>
                <div class="form-group rr-request-user-unit">
                    @Html.RequiredLabelFor(r => r.RequestModel.Users[userIndex].Unit,
                    new {@class = "col-sm-2 control-label"})
                    <div class="col-sm-10">
                        <select class="form-control"
                                name="@Html.NameFor(r => r.RequestModel.Users[userIndex].Unit)">
                            <option value="" selected></option>
                            @foreach (var unit in Model.Units)
                        {
                            var selected = unit.ParentDepartment.Name == Model.RequestModel.Users[userIndex].Department &&
                                           unit.Name == Model.RequestModel.Users[userIndex].Unit;
                        <option @(selected ? "selected" : "")
                                data-id-department="@unit.IdParentDepartment">
                            @unit.Name
                        </option>
                        }
                        </select>
                        @Html.ValidationMessageFor(r => r.RequestModel.Users[userIndex].Unit)
                    </div>
                </div>
                <div class="form-group rr-request-user-office">
                    @Html.RequiredLabelFor(r => r.RequestModel.Users[userIndex].Office,
                    new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(r => r.RequestModel.Users[userIndex].Office,
                        new
                        {
                            @class = "form-control",
                            placeholder = "Введите кабинет сотрудника"
                        })
                        @Html.ValidationMessageFor(r => r.RequestModel.Users[userIndex].Office)
                    </div>
                </div>
                <div class="form-group rr-request-user-phone">
                    @Html.RequiredLabelFor(r => r.RequestModel.Users[userIndex].Phone,
                    new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(r => r.RequestModel.Users[userIndex].Phone,
                        new
                        {
                            @class = "form-control",
                            placeholder = "Введите телефон сотрудника"
                        })
                        @Html.ValidationMessageFor(r => r.RequestModel.Users[userIndex].Phone)
                    </div>
                </div>
                <div class="form-group rr-request-user-description">
                    @Html.RequiredLabelFor(r => r.RequestModel.Users[userIndex].Description,
                        new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.TextAreaFor(r => r.RequestModel.Users[userIndex].Description,
                            new
                            {
                                @class = "form-control",
                                placeholder = "Введите примечание к сотруднику",
                                rows = "4"
                            })
                        @Html.ValidationMessageFor(r => r.RequestModel.Users[userIndex].Description)
                    </div>
                </div>
            </div>
            <div class="panel panel-primary rr-request-rights-wrapper">
                <div class="panel-heading">
                    Предоставить права
                </div>
                <ul class="list-group rr-request-rights">
                    @if (Model.RequestModel.Users[userIndex].Rights != null &&
                         Model.RequestModel.Users[userIndex].Rights.Any())
                    {
                        for (var i = 0; i < Model.RequestModel.Users[userIndex].Rights.Count; i++)
                        {
                            @Html.Partial("RightEditor", Model, new ViewDataDictionary
                            {
                                {"UserIndex", userIndex},
                                {"RightIndex", i},
                                {"SecurityService", ViewData["SecurityService"]}
                            })
                        }
                    }
                </ul>
            </div>
            <div class="text-center rr-edit-user-panel">
                <div class="btn-group" role="group" aria-label="Панель редактирования сотрудника">
                    <button name="deleteUser" class="btn btn-danger rr-remove-user-button">Удалить сотрудника</button>
                    <button name="addRight" class="btn btn-success btn-default rr-add-request-right-button">Добавить право</button>
                </div>
            </div>
        </div>
    </div>
</div>