@using System.Globalization
@using RequestsForRights.Domain.Enums
@using RequestsForRights.Web.Infrastructure.Security.Interfaces
@using RequestsForRights.Web.Infrastructure.Services.Interfaces
@using RequestsForRights.Web.Models.Models
@model RequestsForRights.Web.Models.ViewModels.Request.RequestAddUserViewModel

@{    
    var securityService = (IRequestSecurityService<RequestUserModel>)ViewData["SecurityService"];
    var userService = (IUserService)ViewData["UserService"];
    ViewData["IdRequest"] = Model.RequestModel.IdRequest;
    ViewBag.Title = "Заявка на подключение нового сотрудника";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Заявка # @Model.RequestModel.IdRequest на подключение нового сотрудинка</h2>

@Html.Partial("ErrorAlert")

<div>
    @Html.Partial("Request/Tabs")
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane fade in active rr-tab-pane" id="rr-request-content">
            <div>
                <div class="col-sm-12">
                    <dl class="dl-horizontal">
                        <dt>@Html.DisplayNameFor(r => r.RequestModel.OwnerSnp)</dt>
                        <dd>@Model.RequestModel.OwnerSnp</dd>
                        <dt>@Html.DisplayNameFor(r => r.RequestModel.OwnerDepartment)</dt>
                        <dd>@Model.RequestModel.OwnerDepartment</dd>
                        <dt>@Html.DisplayNameFor(r => r.RequestModel.RequestDate)</dt>
                        <dd>@Model.RequestModel.RequestDate.ToString("dd.MM.yyyy HH:mm", CultureInfo.CurrentCulture)</dd>
                        @if (Model.RequestModel.CompleteDate != null)
                        {
                            <dt>@Html.DisplayNameFor(r => r.RequestModel.CompleteDate)</dt>
                            <dd>@Model.RequestModel.CompleteDate.Value.ToString("dd.MM.yyyy HH:mm", CultureInfo.CurrentCulture)</dd>
                        }
                        @if (!string.IsNullOrEmpty(Model.RequestModel.Description))
                        {
                            <dt>@Html.DisplayNameFor(r => r.RequestModel.Description)</dt>
                            <dd>@Html.Raw(Model.RequestModel.Description.Replace("\n", "<br>"))</dd>
                        }
                    </dl>
                </div>
                <div class="panel-group rr-request-users" id="accordion" role="tablist" aria-multiselectable="true">
                    @if (Model.RequestModel.Users != null)
                    {
                        for (var i = 0; i < Model.RequestModel.Users.Count; i++)
                        {
                            if (!securityService.CanVisibleUser(Model.RequestModel,
                                Model.RequestModel.Users[i]))
                            {
                                continue;
                            }
                            var id = string.Format("collapse{0}", i);

                            <div class="panel panel-primary rr-request-user-wrapper">
                                <div class="panel-heading" role="tab" id="heading@id">
                                    <h4 class="panel-title">
                                        <span class="glyphicon glyphicon-user" aria-hidden="true"></span>
                                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#@id" aria-expanded="true" aria-controls="@id">
                                            Сотрудник «@(Model.RequestModel.Users[i].Snp)»
                                        </a>
                                    </h4>
                                </div>
                                <div id="@id" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                                    <div class="panel-body">
                                        <dl class="dl-horizontal">
                                            <dt>@Html.DisplayNameFor(r => r.RequestModel.Users[i].Snp)</dt>
                                            <dd>@Model.RequestModel.Users[i].Snp</dd>
                                            @if (!string.IsNullOrEmpty(Model.RequestModel.Users[i].Login) &&
                                                 securityService.CanSeeLogin())
                                            {
                                                <dt>@Html.DisplayNameFor(r => r.RequestModel.Users[i].Login)</dt>
                                                <dd>@Model.RequestModel.Users[i].Login</dd>
                                            }
                                            <dt>@Html.DisplayNameFor(r => r.RequestModel.Users[i].Post)</dt>
                                            <dd>@Model.RequestModel.Users[i].Post</dd>
                                            <dt>@Html.DisplayNameFor(r => r.RequestModel.Users[i].Department)</dt>
                                            <dd>@Model.RequestModel.Users[i].Department</dd>
                                            @if (!string.IsNullOrEmpty(Model.RequestModel.Users[i].Unit))
                                            {
                                                <dt>@Html.DisplayNameFor(r => r.RequestModel.Users[i].Unit)</dt>
                                                <dd>@Model.RequestModel.Users[i].Unit</dd>
                                            }
                                            @if (!string.IsNullOrEmpty(Model.RequestModel.Users[i].Office))
                                            {
                                                <dt>@Html.DisplayNameFor(r => r.RequestModel.Users[i].Office)</dt>
                                                <dd>@Model.RequestModel.Users[i].Office</dd>
                                            }
                                            @if (!string.IsNullOrEmpty(Model.RequestModel.Users[i].Phone))
                                            {
                                                <dt>@Html.DisplayNameFor(r => r.RequestModel.Users[i].Phone)</dt>
                                                <dd>@Model.RequestModel.Users[i].Phone</dd>
                                            }
                                            @if (!string.IsNullOrEmpty(Model.RequestModel.Users[i].Description))
                                            {
                                                <dt>@Html.DisplayNameFor(r => r.RequestModel.Users[i].Description)</dt>
                                                <dd>@Html.Raw(Model.RequestModel.Users[i].Description.Replace("\n", "<br>"))</dd>
                                            }
                                        </dl>
                                        @if (securityService.CanSendTransferUserNotification())
                                        {
                                            // Find first active user from another department and alert info about him
                                            var department = Model.RequestModel.Users[i].Department;
                                            var unit = Model.RequestModel.Users[i].Unit;
                                            var snp = Model.RequestModel.Users[i].Snp;
                                            var users = userService.FindUsers(snp, UsersCategory.ActiveUsers, 5).Where(u => u.Department != department).ToList();
                                            //users = users.Concat(users).ToList();
                                            if (users.Any())
                                            {
                                                <div class="alert alert-danger rr-request-user-duplicate-notification">

                                                    <strong>Внимание!</strong>
                                                    @if (users.Count == 1)
                                                    {
                                                        var user = users.First();
                                                        <p>Сотрудник с такими ФИО присутствует в организации <strong>«@(user.Department)»</strong>.
                                                        </p>
                                                        <p>
                                                            Если это подключение связано с переводом сотрудника в другую организацию,
                                                            то рекомендуется отправить уведомление ответственному
                                                            о необходимости подачи заявки на отключение сотрудника от информационных ресурсов данной организации.
                                                        </p>
                                                        <p>
                                                            @Ajax.ActionLink(@"Уведомить ответственного", "SendTransferUserNotification", "RequestAddUser",
                                                                new
                                                                {
                                                                    RequesterSnp = Model.RequestModel.OwnerSnp,
                                                                    RequesterDepartment = Model.RequestModel.OwnerDepartment,
                                                                    TransferUserSnp = snp,
                                                                    TransferToDepartment = department,
                                                                    TransferToUnit = unit,
                                                                    TransferFromDepartment = user.Department,
                                                                    TransferFromUnit = user.Unit
                                                                }, new AjaxOptions
                                                                {
                                                                    OnSuccess = "sendTransferUserNotificationSuccess",
                                                                    OnFailure = "sendTransferUserNotificationFailure",
                                                                    OnBegin = "sendTransferUserNotificationBegin"
                                                                }, null)
                                                        </p>
                                                    }
                                                    else
                                                    {
                                                        <p>Сотрудник с такими ФИО присутствует в следующих организациях:</p>
                                                        <ul>
                                                            @foreach (var user in users)
                                                            {
                                                                <li>@user.Department —
                                                                    @Ajax.ActionLink(@"Уведомить ответственного", "SendTransferUserNotification", "RequestAddUser",
                                                                        new
                                                                        {
                                                                            RequesterSnp = Model.RequestModel.OwnerSnp,
                                                                            RequesterDepartment = Model.RequestModel.OwnerDepartment,
                                                                            TransferUserSnp = snp,
                                                                            TransferToDepartment = department,
                                                                            TransferToUnit = unit,
                                                                            TransferFromDepartment = user.Department,
                                                                            TransferFromUnit = user.Unit
                                                                        }, new AjaxOptions
                                                                        {
                                                                            OnSuccess = "sendTransferUserNotificationSuccess",
                                                                            OnFailure = "sendTransferUserNotificationFailure",
                                                                            OnBegin = "sendTransferUserNotificationBegin"
                                                                        }, null)
                                                                </li>
                                                            }
                                                        </ul>
                                                        <p>
                                                            Если это подключение связано с переводом сотрудника в другую организацию,
                                                            то рекомендуется отправить уведомление одному или нескольким ответственным
                                                            о необходимости подачи заявки на отключение сотрудника от информационных ресурсов организации.
                                                        </p>
                                                    }
                                                </div>
                                            }
                                        }
                                        @if (Model.RequestModel.Users[i].Rights != null &&
                                             Model.RequestModel.Users[i].Rights.Any())
                                        {
                                            <div class="panel panel-primary rr-request-rights">
                                                <div class="panel-heading">
                                                    <h3 class="panel-title">Предоставить права</h3>
                                                </div>
                                                <ul class="list-group">
                                                    @for (var j = 0; j < Model.RequestModel.Users[i].Rights.Count; j++)
                                                    {
                                                        if (!securityService.CanVisibleRight(
                                                            Model.RequestModel,
                                                            Model.RequestModel.Users[i].Rights[j]))
                                                        {
                                                            continue;
                                                        }
                                                        <li class="list-group-item">
                                                            <dl class="dl-horizontal rr-request-right-container">
                                                                <dt>@Html.DisplayNameFor(r => r.RequestModel.Users[i].Rights[j].ResourceName)</dt>
                                                                <dd>@Model.RequestModel.Users[i].Rights[j].ResourceName</dd>
                                                                <dt>
                                                                    @Html.DisplayNameFor(r => r.RequestModel.Users[i].Rights[j].ResourceRightName)
                                                                </dt>
                                                                <dd title="@Html.AttributeEncode(Model.RequestModel.Users[i].Rights[j].ResourceRightDescription)">
                                                                    @Model.RequestModel.Users[i].Rights[j].ResourceRightName
                                                                </dd>
                                                                @if (!string.IsNullOrEmpty(Model.RequestModel.Users[i].Rights[j].Description))
                                                                {
                                                                    <dt>@Html.DisplayNameFor(r => r.RequestModel.Users[i].Rights[j].Description)</dt>
                                                                    <dd>@Html.Raw(Model.RequestModel.Users[i].Rights[j].Description.Replace("\n", "<br>"))</dd>
                                                                }
                                                            </dl>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            @Html.Partial("Request/EditPanels/Detail")
        </div>
        @Html.Partial("Request/Agreements")
        @Html.Partial("Request/ExtComments", Model.Comments)
    </div>
</div>

@Html.Partial("DeleteModal", new
{
    Caption = "Подтвердите удаление",
    Description = "Вы действительно хотите удалить эту заявку?"
})

@section scripts {
    @Scripts.Render("~/bundles/jquery.autocomplete")
    @Scripts.Render("~/bundles/rr-request.common")
    @Scripts.Render("~/bundles/rr-detail.update.common")
    @Scripts.Render("~/bundles/rr-request.comments")
    @Scripts.Render("~/bundles/rr-request.agreements")
    @Scripts.Render("~/bundles/rr-request.add-user.detail")
}